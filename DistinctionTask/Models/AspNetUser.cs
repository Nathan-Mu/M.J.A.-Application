//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistinctionTask.Models
{
    using System;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Collections.Generic;
    
    public partial class AspNetUser
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public AspNetUser()
        {
            this.Articles = new HashSet<Article>();
        }

        [Display(Name = "Journalist ID")]
        public string Id { get; set; }
        public string Email { get; set; }
        public bool EmailConfirmed { get; set; }
        public string PasswordHash { get; set; }
        public string SecurityStamp { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        public bool TwoFactorEnabled { get; set; }
        public Nullable<System.DateTime> LockoutEndDateUtc { get; set; }
        public bool LockoutEnabled { get; set; }
        public int AccessFailedCount { get; set; }
        public string UserName { get; set; }

        [Display(Name = "Date of Birth")]
        [DisplayFormat(DataFormatString = "{0:dd/MMM/yyyy}", ApplyFormatInEditMode = true)]
        [Required(ErrorMessage = "Date of birth cannot be blank")]
        [Historical(ErrorMessage = "Date of birth should be a historical date")]
        public Nullable<System.DateTime> DateOfBirth { get; set; }

        public string Address { get; set; }
        [Display(Name = "First Name")]
        [Required(ErrorMessage = "First name cannot be blank")]
        [StringLength(50, ErrorMessage = "First name cannot be longer than 50-digit")]
        public string FirstName { get; set; }

        [Display(Name = "Last Name")]
        [Required(ErrorMessage = "Last name cannot be blank")]
        [StringLength(50, ErrorMessage = "Last name cannot be longer than 50-digit")]
        public string LastName { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Article> Articles { get; set; }

        public class Historical : ValidationAttribute
        {
            public override bool IsValid(object value)
            {
                if (value == null)
                    return true;
                else
                {
                    return (DateTime)value < DateTime.Today;
                }

            }
        }
    }
}
